# ----------------------------------------------------------------------------------------------------------------------------------------------------
# @description: Default ArgoCD Project Application Template.
# @see {@link https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/project.yaml}
# ----------------------------------------------------------------------------------------------------------------------------------------------------
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: rest-api
  namespace: argocd-system
  # Finalizer that ensures that project is not deleted until it is not referenced by any application
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  # Project description
  description: "Example Rest-API CI/CD Project"

  # Allow manifests to deploy from any Git repos
  sourceRepos:
    - "*"

  # Only permit applications to deploy to the guestbook namespace in the same cluster
  destinations:
    - namespace: rest-api-*
      server: https://kubernetes.default.svc
    - namespace: rest-api-product
      server: https://kubernetes.default.svc
    - namespace: rest-api-staging
      server: https://kubernetes.default.svc

  # Deny all cluster-scoped resources from being created, except for Namespace
  clusterResourceWhitelist:
    - group: ''
      kind: Namespace

  # Allow all namespaced-scoped resources to be created, except for ResourceQuota, LimitRange, NetworkPolicy
  namespaceResourceBlacklist:
    - group: ''
      kind: ResourceQuota
    - group: ''
      kind: LimitRange
    - group: ''
      kind: NetworkPolicy

  # Deny all namespaced-scoped resources from being created, except for Deployment and StatefulSet
  namespaceResourceWhitelist:
    - group: 'apps'
      kind: "*" # Cover all [Deployment, ReplicaSet, StatefulSet, ...etc]
    - group: 'apps'
      kind: Deployment
    - group: 'apps'
      kind: StatefulSet
    - group: 'apps'
      kind: ReplicaSet
    - group: ''
      kind: "*" # Cover all [Container, Pod, ConfigMap, Secret, ...etc]
    - group: ''
      kind: ConfigMap
    - group: ''
      kind: Secret
    - group: ''
      kind: Pod
    - group: 'networking.k8s.io'
      kind: "*" # Cover all [Ingress, ...etc]
